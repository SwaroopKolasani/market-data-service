services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: market_data
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data  # ← PERSISTENT VOLUME
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d market_data"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data  # ← PERSISTENT VOLUME
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data  # ← PERSISTENT VOLUME
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data  # ← PERSISTENT VOLUME
    restart: unless-stopped

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    depends_on:
      - postgres
      - kafka
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/market_data
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      DEFAULT_PROVIDER: finnhub
      FINNHUB_API_KEY: d171l8pr01qkv5je03n0d171l8pr01qkv5je03ng
    restart: unless-stopped

# ← CRITICAL: Named volumes for persistence
volumes:
  postgres_data:
  redis_data:
  zookeeper_data:
  kafka_data: